{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/pipe/words.pipe.ts","webpack:///./src/app/providers/grid.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"grid\\\">\\n    <div class=\\\"line\\\" *ngFor='let line of gridService.grid'>\\n      <div class=\\\"letter\\\" [ngClass]=\\\"{'selected': letter.selected, 'foundX': letter.foundX,'foundY': letter.foundY}\\\" *ngFor='let letter of line' (click)=\\\"select(letter)\\\">\\n        {{letter.letter}}\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"actions\\\">\\n  <button (click)=\\\"settingsPanel.open()\\\">Paramètres</button>\\n  <button (click)=\\\"wordsPanel.open()\\\">Mots à trouver</button>\\n</div>\\n\\n\\n<div class=\\\"end\\\" *ngIf='gridService.end'>\\n  Fin\\n  <button (click)=\\\"generate()\\\">Regenerer une grille</button>\\n</div>\\n\\n<clt-side-panel [title]=\\\"'Hey'\\\" direction=\\\"bottom\\\" [noActions]=\\\"true\\\" #settingsPanel>\\n  <div *clt-popup-body>\\n    <form [formGroup]=\\\"gridForm\\\">\\n      <div class=\\\"label\\\">Brouiller les pistes</div>\\n      <input type=\\\"checkbox\\\" formControlName=\\\"hidden\\\">\\n      <div class=\\\"label\\\">Width</div>\\n      <input type=\\\"number\\\" formControlName=\\\"width\\\">\\n      <div class=\\\"label\\\">Height</div>\\n      <input type=\\\"number\\\" formControlName=\\\"height\\\">\\n      <button (click)=\\\"warn()\\\">Generation</button>\\n    </form>\\n  </div>\\n</clt-side-panel>\\n<clt-side-panel [title]=\\\"'Hey'\\\" direction=\\\"bottom\\\" [noActions]=\\\"true\\\" #wordsPanel>\\n  <div *clt-popup-body>\\n    <div class=\\\"categories\\\">\\n      <div class=\\\"category\\\" *ngFor=\\\"let category of gridService.allWords | words\\\">\\n        <div class=\\\"category-header\\\">{{category.nbLetters}} lettres</div>\\n        <div class=\\\"word\\\" *ngFor=\\\"let word of category.letters\\\" [ngClass]=\\\"{found: word.found}\\\">\\n          {{ word.word }}\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</clt-side-panel>\\n\\n<clt-popup #warningPopup width=\\\"90vw\\\">\\n  <div *clt-popup-body>\\n    Attention, vous perdrez la partie en cours.\\n  </div>\\n</clt-popup>\"","module.exports = \".container {\\n  display: flex; }\\n  .container .grid {\\n    display: inline-block;\\n    height: 100%;\\n    max-height: 90vh;\\n    border: 1px solid darkgrey;\\n    box-shadow: 1px 1px 1px lightgrey;\\n    background-color: #f0f0f0;\\n    overflow: scroll;\\n    width: 100%; }\\n  .container .grid .line {\\n      display: flex;\\n      justify-content: center; }\\n  .container .grid .line .letter {\\n        display: flex;\\n        flex-shrink: 0;\\n        justify-content: center;\\n        align-items: center;\\n        width: 1.5em;\\n        height: 1.5em; }\\n  .container .grid .line .letter:hover {\\n          background-color: rgba(0, 0, 0, 0.2);\\n          border-radius: 100%; }\\n  .container .grid .line .letter.selected {\\n          background-color: #2b276c;\\n          color: white;\\n          border-radius: 100%; }\\n  .container .grid .line .letter.foundX::before {\\n          background-color: black;\\n          width: 1.5em;\\n          height: 1px;\\n          content: '';\\n          position: absolute; }\\n  .container .grid .line .letter.foundY::after {\\n          background-color: black;\\n          height: 1.5em;\\n          width: 1px;\\n          content: '';\\n          position: absolute; }\\n  .categories {\\n  display: flex;\\n  justify-content: space-between;\\n  flex-wrap: wrap; }\\n  .categories .category {\\n    width: 49%;\\n    margin-top: 10px;\\n    border: 1px solid lightgrey;\\n    box-shadow: 1px 1px 1px darkgrey; }\\n  .categories .category .category-header {\\n      text-align: center;\\n      font-weight: bold;\\n      background-color: #466c80;\\n      color: white; }\\n  .categories .category .word {\\n      display: flex;\\n      align-items: center;\\n      position: relative;\\n      padding-left: 1em; }\\n  .categories .category .word.found::before {\\n        content: '\\\\2714';\\n        position: absolute;\\n        margin-left: -1em;\\n        color: #37ad68; }\\n  div {\\n  box-sizing: border-box; }\\n  .actions {\\n  width: 100%; }\\n  .end {\\n  width: 100vw;\\n  height: 100vh;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  color: white;\\n  background-color: rgba(0, 0, 0, 0.75);\\n  font-size: 2em; }\\n  .actions {\\n  position: absolute;\\n  bottom: 0;\\n  width: 100%;\\n  left: 0;\\n  display: flex;\\n  justify-content: space-between; }\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { GridService } from './providers/grid.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { CltThemeService, CltPopupComponent } from 'ngx-callisto/dist';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  selectedLetter;\n  gridForm: FormGroup;\n  @ViewChild('warningPopup') warningPopup: CltPopupComponent;\n  @ViewChild('settingsPanel') settingsPanel: CltPopupComponent;\n  constructor(public gridService: GridService, private fb: FormBuilder, theme: CltThemeService) { }\n  ngOnInit() {\n    this.gridForm = this.fb.group({\n      width: [5, [Validators.required]],\n      height: [5, [Validators.required]],\n      hidden: [true, [Validators.required]]\n    });\n    this.generate();\n  }\n\n  generate() {\n    this.gridService.generateGrid(this.gridForm.value.width, this.gridForm.value.height, this.gridForm.value.hidden);\n  }\n  select(letter) {\n    if (this.selectedLetter) {\n      this.gridService.selectWord(this.selectedLetter, letter);\n      letter.selected = false;\n      this.selectedLetter.selected = false;\n      this.selectedLetter = null;\n    } else {\n      letter.selected = true;\n      this.selectedLetter = letter;\n    }\n  }\n\n  warn() {\n    this.settingsPanel.close();\n    this.warningPopup.open().subscribe(result => {\n      if (!result) return;\n      this.generate();\n    });\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppComponent } from './app.component';\nimport { GridService } from './providers/grid.service';\nimport { CltOverlayModule } from 'ngx-callisto/dist';\nimport { WordsPipe } from './pipe/words.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WordsPipe\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    CltOverlayModule.forRoot()\n  ],\n  providers: [GridService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'words'\n})\nexport class WordsPipe implements PipeTransform {\n\n  transform(words: any, args?: any): any {\n    const categoriesObject = {};\n    words.map(word => {\n      if (!categoriesObject[word.word.length]) categoriesObject[word.word.length] = [];\n      categoriesObject[word.word.length].push(word);\n    });\n    return Object.keys(categoriesObject).map(key => {\n      return { nbLetters: key, letters: categoriesObject[key] };\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nconst dico = require('./liste_francais.json');\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GridService {\n  width = 0;\n  height = 0;\n  nbWordToPlaceInGrid = 0;\n  allWords = [];\n  possibilities = [];\n  grid = [];\n  gridError = new Subject();\n  end = false;\n\n  constructor() {}\n\n  generateGrid(width, height, hidden = true) {\n    if (width < 1 || height < 1) return this.gridError.next('La hauteur et la largeur sont supérieurs à 0');\n    this.end = false;\n    this.width = width;\n    this.height = height;\n    this.grid = Array(this.height).fill('').map(y => Array(this.width).fill('°'));\n    this.allWords = [];\n    this.possibilities = [];\n    this.grid.map((line, y) => {\n      line.map((_, x) => {\n        this.possibilities.push({ x, y });\n        this.grid[y][x] = { x, y, letter: '°', selected: false, foundY: false, foundX: false};\n      });\n    });\n    this.nbWordToPlaceInGrid = (this.width * this.height) / 10;\n    this.placeWords();\n    if (hidden) this.shufflingEmptySlot();\n  }\n\n  shufflingEmptySlot() {\n    const letters = 'abcdefghijklmnopqrstuvwyàéèçeê';\n    for (let y = 0; y < this.grid.length; y++) {\n        for (let x = 0; x < this.grid[y].length; x++) {\n          if (this.grid[y][x].letter === '°') {\n            this.grid[y][x].letter = letters.charAt(Math.floor(Math.random() * letters.length));\n          }\n        }\n    }\n  }\n  getWord() {\n    return dico[Math.floor(Math.random() * dico.length)];\n  }\n\n  placeWords() {\n    for (let i = 0; i < this.nbWordToPlaceInGrid; i++) {\n        const randomPosibilityIndex = Math.floor(Math.random() * this.possibilities.length);\n        const randomPosibility = this.possibilities.splice(randomPosibilityIndex, 1).pop();\n        this.placeWord(randomPosibility.x, randomPosibility.y);\n    }\n  }\n\n  placeWord(x, y, retry = 5000) {\n    let placed = false;\n    const word = this.getWord();\n    if (Math.floor(Math.random() * 2)) {\n      placed = this.placeToRight(word, x, y, Math.floor(Math.random() * 2) ? 1 : -1);\n    } else {\n      placed = this.placeToBottom(word, x, y, Math.floor(Math.random() * 2) ? 1 : -1);\n    }\n    if (!retry) { return false; }\n    if (!placed) {\n        return this.placeWord(x, y, retry - 1);\n    }\n  }\n\n  placeToRight(word, x, y, direction) {\n    let placed = true;\n    const wordLocations = [];\n    for (let i = 0; i < word.length; i++) {\n        const letter = word[i];\n        const toX = x + i * direction;\n        if (this.grid[y][toX] && (this.grid[y][toX].letter === '°' || this.grid[y][toX].letter === letter)) {\n            wordLocations.push({letter, x: toX, y});\n        } else { placed = false; }\n    }\n\n    if (placed) {\n        this.allWords.push({word, found: false});\n        return this.integrateChanges(wordLocations);\n    }\n  }\n\n  placeToBottom(word, x, y, direction) {\n    let placed = true;\n    const wordLocations = [];\n    for (let i = 0; i < word.length; i ++) {\n        const letter = word[i];\n        const toY = y + i * direction;\n        if (this.grid[toY] && (this.grid[toY][x].letter === '°' || this.grid[toY][x].letter === letter)) {\n            wordLocations.push({letter, x, y: toY});\n        } else { placed = false; }\n    }\n    if (placed) {\n        this.allWords.push({word, found: false});\n        return this.integrateChanges(wordLocations);\n    }\n  }\n  integrateChanges(wordLocations) {\n    wordLocations.map(location => {\n        this.grid[location.y][location.x].letter = location.letter;\n    });\n    return true;\n  }\n\n  selectWord(letter1, letter2) {\n    if (!(letter1.x === letter2.x || letter1.y === letter2.y))\n      this.gridError.next('La ligne n`est pas valide');\n\n    const letters = [];\n    let direction = '';\n    // vertical bottom\n    if (letter1.x === letter2.x && letter1.y < letter2.y) {\n      for (let y = letter1.y; y < letter2.y; y++) {\n        letters.push(this.grid[y][letter1.x]);\n      }\n      direction = 'Y';\n    }\n    // vertical top\n    if (letter1.x === letter2.x && letter1.y > letter2.y) {\n      for (let y = letter1.y; y > letter2.y; y--) {\n        letters.push(this.grid[y][letter1.x]);\n      }\n      direction = 'Y';\n    }\n    // horizontal right\n    if (letter1.x < letter2.x && letter1.y === letter2.y) {\n      for (let x = letter1.x; x < letter2.x; x++) {\n        letters.push(this.grid[letter1.y][x]);\n      }\n      direction = 'X';\n    }\n    // horizontal left\n    if (letter1.x > letter2.x && letter1.y === letter2.y) {\n      for (let x = letter1.x; x > letter2.x; x--) {\n        letters.push(this.grid[letter1.y][x]);\n      }\n      direction = 'X';\n    }\n    letters.push(letter2);\n    const word = letters.map(letter => letter.letter).join('');\n    let found = false;\n    this.allWords.forEach(_word => {\n      if (_word.word === word) {\n        found = true;\n        _word.found = true;\n      }\n    });\n    if (found) {\n      if (direction === 'X') letters.map(_letters => _letters.foundX = true);\n      if (direction === 'Y') letters.map(_letters => _letters.foundY = true);\n      const end = this.allWords.map(_word => _word.found).filter(_word => _word);\n      if (end.length === this.allWords.length) this.end = true;\n    }\n\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}